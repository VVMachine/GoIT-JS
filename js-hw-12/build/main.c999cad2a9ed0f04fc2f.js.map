{"version":3,"sources":["webpack:///./index.js","webpack:///./scripts/markupRender.js","webpack:///./scripts/apiRequest.js"],"names":["refs","input","document","querySelector","countryList","countryData","dataParser","obj","parsedData","map","el","name","capital","population","languages","flag","dataArray","length","innerHTML","countryObj","languagesListMarkup","join","dataMarkup","console","log","dataListMarkup","PNotify","error","text","markupRender","addEventListener","debounce","e","inputValue","target","value","coountryName","fetch","then","resp","json","data","fetchApi"],"mappings":"sOAQA,IAAMA,EAAO,CACXC,MAAOC,SAASC,cAAc,aAC9BC,YAAaF,SAASC,cAAc,oBACpCE,YAAaH,SAASC,cAAc,qBAUtC,SAASG,EAAWC,GAClB,IAAMC,EAAaD,EAAIE,KAAI,SAAAC,GAUzB,MATkB,CAChBC,KAAMD,EAAGC,KACTC,QAASF,EAAGE,QACZC,WAAYH,EAAGG,WACfC,UAAWJ,EAAGI,UAAUL,KAAI,SAAAC,GAC1B,OAAOA,EAAGC,QAEZI,KAAML,EAAGK,UC5BA,SAAsBX,EAAaC,EAAaW,GAC7D,GAAyB,IAArBA,EAAUC,OAAc,CAC1Bb,EAAYc,UAAY,GACxBb,EAAYa,UAAY,GAExB,IAAMC,EAAaH,EAAU,GAErBL,EAA+CQ,EAA/CR,KAAMC,EAAyCO,EAAzCP,QAASC,EAAgCM,EAAhCN,WAAYC,EAAoBK,EAApBL,UAAWC,EAASI,EAATJ,KAMxCK,EAJgBN,EAAUL,KAC9B,SAAAC,GAAE,wCAAsCA,EAAtC,WAGsCW,KAAK,IAEzCC,EAAa,6CACmBX,EADtB,mDAEuBC,EAFvB,wDAG6BC,EAH7B,4DAIiCO,EAJjC,4CAKgBL,EALhB,yCAQhBV,EAAYa,UAAYI,EAExBC,QAAQC,IAAIJ,QACP,GAAIJ,EAAUC,OAAS,GAAKD,EAAUC,QAAU,GAAI,CACzDb,EAAYc,UAAY,GACxBb,EAAYa,UAAY,GAExB,IAMMO,EANgBT,EAAUP,KAAI,SAAAC,GAAE,OAAIA,EAAGC,QAEdF,KAC7B,SAAAC,GAAE,yCAAuCA,EAAvC,WAG4BW,KAAK,IAErCjB,EAAYc,UAAYO,OAExBC,IAAQC,MAAM,CACZC,KAAM,gEDRVC,CAAa7B,EAAKI,YAAaJ,EAAKK,YAAaG,GArBnDR,EAAKC,MAAM6B,iBAAiB,QAASC,KAErC,SAAsBC,GACpB,IAAMC,EAAaD,EAAEE,OAAOC,OEff,SAAUC,EAAc9B,GACrC+B,MAHe,yCAGED,GACdE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAInC,EAAWmC,MFa3BC,CAAST,EAAY3B,KAJqC,Q","file":"main.c999cad2a9ed0f04fc2f.js","sourcesContent":["import './styles.css';\nimport '../node_modules/pnotify/dist/PNotifyBrightTheme.css';\n\nimport debounce from 'lodash.debounce';\n\nimport fetchApi from './scripts/apiRequest';\nimport markupRender from './scripts/markupRender';\n\nconst refs = {\n  input: document.querySelector('.js-input'),\n  countryList: document.querySelector('.js-country-list'),\n  countryData: document.querySelector('.js-country-data'),\n};\n\nrefs.input.addEventListener('input', debounce(onInputValue, 1000));\n\nfunction onInputValue(e) {\n  const inputValue = e.target.value;\n  fetchApi(inputValue, dataParser);\n}\n\nfunction dataParser(obj) {\n  const parsedData = obj.map(el => {\n    const parsedObj = {\n      name: el.name,\n      capital: el.capital,\n      population: el.population,\n      languages: el.languages.map(el => {\n        return el.name;\n      }),\n      flag: el.flag,\n    };\n    return parsedObj;\n  });\n\n  markupRender(refs.countryList, refs.countryData, parsedData);\n}\n","import PNotify from '../../node_modules/pnotify/dist/es/PNotify.js';\r\n\r\nexport default function markupRender(countryList, countryData, dataArray) {\r\n  if (dataArray.length === 1) {\r\n    countryList.innerHTML = '';\r\n    countryData.innerHTML = '';\r\n\r\n    const countryObj = dataArray[0];\r\n\r\n    const { name, capital, population, languages, flag } = countryObj;\r\n\r\n    const languagesList = languages.map(\r\n      el => `<li class = 'country-language'>${el}</li>`,\r\n    );\r\n\r\n    const languagesListMarkup = languagesList.join('');\r\n\r\n    const dataMarkup = `\r\n    <h3 class = \"country-name\">Country: ${name}</h3>\r\n    <p class = \"contry-capital\">Capital: ${capital}</p>\r\n    <p class = \"contry-population\">Population: ${population}</p>\r\n    <ul class = \"contry-languages-list\">Languages: ${languagesListMarkup}</ul>\r\n    <object id=\"svg-object\" data=\"${flag}\" type=\"image/svg+xml\"></object>\r\n    `;\r\n\r\n    countryData.innerHTML = dataMarkup;\r\n\r\n    console.log(languagesListMarkup);\r\n  } else if (dataArray.length > 1 && dataArray.length <= 10) {\r\n    countryList.innerHTML = '';\r\n    countryData.innerHTML = '';\r\n\r\n    const dataListNames = dataArray.map(el => el.name);\r\n\r\n    const dataList = dataListNames.map(\r\n      el => `<li class = \"country-list-item\">${el}</li>`,\r\n    );\r\n\r\n    const dataListMarkup = dataList.join('');\r\n\r\n    countryList.innerHTML = dataListMarkup;\r\n  } else {\r\n    PNotify.error({\r\n      text: 'Too many matches found. Please enter a more specific query!',\r\n    });\r\n  }\r\n}\r\n","const BASE_URL = 'https://restcountries.eu/rest/v2/name/';\r\n\r\nexport default function (coountryName, dataParser) {\r\n  fetch(BASE_URL + coountryName)\r\n    .then(resp => resp.json())\r\n    .then(data => dataParser(data));\r\n}\r\n"],"sourceRoot":""}